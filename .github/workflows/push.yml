name: PUSH CI

on:
  push:
    branches:
      - main

jobs:
  install_dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: cache node_modules
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-${{ hashFiles('./package-lock.json') }}
          path: |
            ./node_modules
      - name: install latest npm
        run: |
          ([ ! -d ./node_modules ] && npm install -g npm || echo "CACHE ALREADY EXISTS") &&
          echo "CURRENT NPM VERSION ($(npm -v)) NODE ($(node -v))" &&
          echo "PATHS NPM ($(which npm)) NODE ($(which node))"
      - name: install dependencies
        run: |
          [ ! -d ./node_modules ] && npm ci || npm run prepare

  build:
    runs-on: ubuntu-latest
    needs:
      - install_dependencies
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: restore node_modules cache
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-${{ hashFiles('./package-lock.json') }}
          path: |
            ./node_modules
      - name: cache serverless build
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-${{ GITHUB.SHA }}-sls-build
          path: |
            ./.serverless
      - name: install latest npm
        run: |
          npm install -g npm &&
          echo "CURRENT VERSION NPM ($(npm -v)) NODE ($(node -v))"
      - name: build
        run: ./node_modules/.bin/sls package --verbose
      - name: check serverless
        if: failure()
        run: ./node_modules/.bin/sls doctor
